#!/usr/bin/env python3
"""
üöÄ TESTE R√ÅPIDO OLLAMA
====================

Script simples para verificar rapidamente se Ollama est√° ativo.
Execute: python quick_ollama_test.py
"""

import os
import requests
from dotenv import load_dotenv

def main():
    print("üöÄ TESTE R√ÅPIDO OLLAMA")
    print("=" * 30)
    
    # Carregar .env
    load_dotenv()
    
    # Obter configura√ß√£o
    base_url = os.getenv('OLLAMA_BASE_URL', 'http://localhost:11434')
    model = os.getenv('OLLAMA_MODEL', 'llama2')
    
    print(f"üåê Servidor: {base_url}")
    print(f"ü§ñ Modelo: {model}")
    
    try:
        # Teste de conectividade
        base_url = base_url.rstrip('/')
        response = requests.get(f"{base_url}/api/tags", timeout=5)
        
        if response.status_code == 200:
            data = response.json()
            models = [m['name'] for m in data.get('models', [])]
            
            print("‚úÖ Ollama est√° ATIVO!")
            print(f"üì¶ Modelos dispon√≠veis: {len(models)}")
            
            if model in models or f"{model}:latest" in models:
                print(f"‚úÖ Modelo '{model}' est√° dispon√≠vel!")
                
                # Teste r√°pido de gera√ß√£o
                try:
                    gen_response = requests.post(
                        f"{base_url}/api/generate",
                        json={"model": model, "prompt": "Hi", "stream": False},
                        timeout=10
                    )
                    
                    if gen_response.status_code == 200:
                        print("‚úÖ Gera√ß√£o funcionando!")
                        return True
                    else:
                        print("‚ö†Ô∏è Conectado, mas erro na gera√ß√£o")
                        return False
                        
                except requests.exceptions.Timeout:
                    print("‚ö†Ô∏è Conectado, mas timeout na gera√ß√£o")
                    return False
            else:
                print(f"‚ùå Modelo '{model}' n√£o encontrado!")
                print(f"   Dispon√≠veis: {models}")
                return False
        else:
            print(f"‚ùå Servidor respondeu com c√≥digo {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå N√£o foi poss√≠vel conectar!")
        print(f"   Verifique: {base_url}")
        return False
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

if __name__ == "__main__":
    if main():
        print("\nüéâ OLLAMA FUNCIONANDO!")
        exit(0)
    else:
        print("\n‚ùå OLLAMA COM PROBLEMAS!")
        exit(1)
